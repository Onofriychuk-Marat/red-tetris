import React from 'react';
import 'css/global.css';
import ImageExitFromPlay from 'assets/blackRemove.png';
import NextTetro from './nextTetro';

const Grid = ({grid, isListGridsPlayers, nextTetro}) => {

    const AdditionalInfo = () => {
        if (isListGridsPlayers) {
            return (<p className='text text_color_red text_location_center text_size_small'>utoomey</p>)
        }
        if (!nextTetro) {
            return <div/>;
        }
        return (
            <div className='tetris-grid__next-tetro'>
                <p className='text text text_size_small' style={{color: nextTetro.color, opacity: '0.5'}}>{nextTetro.name}</p>
                <NextTetro tetro={nextTetro}/>
            </div>
        )
    }

    const ExitButton = () => (
        <div className='tetris-grid__cell-exit tetris-grid__cell_size_big '>
            <button className='button tetris-grid__button-exit button_hover_to-react'>
                <img src={ImageExitFromPlay}
                    className='image_theme_small-icon'></img>
            </button>
            
        </div>
    )

    const Cell = ({cube}) => (
        <div className={'tetris-grid__cell ' + 
                        (isListGridsPlayers ?
                        'tetris-grid__cell_size_small' :
                        'tetris-grid__cell_size_big')}>
            {
                cube.isActive || cube.isLanded || cube.isLandingPlace
                ?
                <div className={
                    cube.isLandingPlace ? 
                    'tetris-grid__landing_place' : 
                    'tetris-grid__cube'}
                        style={{background: cube.color}}/>
                
                :
                undefined
            }
        </div>
    )

    return (
        <div className='game'>
            <AdditionalInfo/>
            <div className={'tetris-grid ' +
                            (isListGridsPlayers ? 
                            'tetris-grid__wrapper' :
                            undefined)}
                style={{color: 'red'}}>
                {
                    grid.map((lineOfCubes, index) => {

                        return (
                            <div key={index} className='tetris-grid__line-cells'>
                                {
                                    !isListGridsPlayers && index === 0
                                    ?
                                    <ExitButton/>
                                    :
                                    <Cell cube={lineOfCubes[0]}/>
                                }
                                <Cell cube={lineOfCubes[1]}/>
                                <Cell cube={lineOfCubes[2]}/>
                                <Cell cube={lineOfCubes[3]}/>
                                <Cell cube={lineOfCubes[4]}/>
                                <Cell cube={lineOfCubes[5]}/>
                                <Cell cube={lineOfCubes[6]}/>
                                <Cell cube={lineOfCubes[7]}/>
                                <Cell cube={lineOfCubes[8]}/>
                                <Cell cube={lineOfCubes[9]}/>
                            </div>
                        )
                    })
                }
            </div>
        </div>
    )
}

export default Grid;