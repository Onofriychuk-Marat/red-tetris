import _ from 'lodash';
import { compose } from 'ramda';

export const random = (range) => Math.floor(Math.random() * range)

const createArray = _.curry((array, obj) => _.map(array, () => {
    if (Array.isArray(obj)) {
        return [...obj]
    }
    return {...obj};
}))

export const createGrid = compose(
    createArray(new Array(20)),
    createArray(new Array(10))
)

export const createLine = (obj) => Array(10).fill(0).map(() => (obj))

// export const createGrid = (size_y, size_x, obj) => {
//     return Array(size_y).fill(Array(size_x).fill({...obj}))
// }

export const eachGrid = (grid, callback) => {
    _.each(grid, (line, y) => {
        _.each(line, (value, x) => {
            callback(value, x, y);
        })
    })
}

export const someForGrid = (grid, callback) => {
    return _.some(grid, (line, y) => {
        return _.some(line, (value, x) => {
            return callback(value, x, y);
        })
    })
}

export const forRange = (range, callback) => _.range(range).forEach((value, index) => callback(value, index));
